@using PagedList
@using PagedList.Mvc

@model IEnumerable<EntityLayer.Concrete.Blog>
@{ string color="";}
<div class="site-section">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12">
                <h2>Son Gönderiler</h2>
            </div>
        </div>
        <div class="row">
            @foreach(var x in Model)
            {
                if(x.Category.CategoryName=="Yazılım")
                {
                    color = "post-category text-white bg-danger mb-3";
                }
                if (x.Category.CategoryName == "Moda")
                {
                    color = "post-category text-white bg-info mb-3";
                }
                if (x.Category.CategoryName == "Teknoloji")
                {
                    color = "post-category text-white bg-warning mb-3";
                }
            <div class="col-lg-4 mb-4">
                <div class="entry2">
                    <a href="/Blog/BlogDetails/@x.BlogID"><img src="@x.BlogImage" style="height:250px" alt="Image" class="img-fluid rounded"></a>
                    <div class="excerpt">
                        <span class="@color">@x.Category.CategoryName</span>
                        <h2 style="height:50px"><a href="/Blog/BlogDetails/@x.BlogID">
                    @{ string title = x.BlogTitle;
                        int maxLength = 35; // Başlığın sınırlandırılmak istenen karakter sayısı

                        // Başlık, belirlenen karakter sayısından uzunsa kesilir ve sonuna "..." eklenir
                        if (title.Length > maxLength)
                        {
                            title = title.Substring(0, maxLength).Trim() + "...";
                        }

                 @title }</a></h2>
                        <div class="post-meta align-items-center text-left clearfix">
                            <figure class="author-figure mb-0 mr-3 float-left"><img src="@x.Author.AuthorImage" alt="Image" class="img-fluid"></figure>
                            <span class="d-inline-block mt-1"> @x.Author.AuthorName</span>
                            <span>&nbsp;-&nbsp; @(((DateTime)x.BlogDate).ToString("dd-MMM-yyyy"))</span>
                            <span> / Puan: @x.BlogRating</span>
                         </div>
                        <p>
                            @{
                                string content = x.BlogContent;

                                // HTML etiketlerini kaldırmak için Regex kullanımı
                                string plainText = System.Text.RegularExpressions.Regex.Replace(content, "<.*?>|&nbsp;", string.Empty);


                                string result;

                                if (plainText.Length <= 200)
                                {
                                    result = plainText.Trim(); // Eğer içerik 200 karakterden kısaysa tamamını döndür
                                }
                                else
                                {
                                    string truncatedContent = plainText.Substring(0, 200); // İlk 200 karakteri al
                                    int lastSpaceIndex = truncatedContent.LastIndexOf(" ");

                                    if (lastSpaceIndex > 0)
                                    {
                                        result = truncatedContent.Substring(0, lastSpaceIndex).Trim(); // Son kelimeyi kesmemek için tam kelimeye kadar al
                                    }
                                    else
                                    {
                                        result = truncatedContent.Trim(); // Eğer boşluk yoksa direkt 200 karakterlik kısmı döndür
                                    }
                                }

                                @result // Sadece düz metin göster
                            }

                        </p>
                        <p><a href="/Blog/BlogDetails/@x.BlogID">Devamını Oku</a></p>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>

@Html.PagedListPager((IPagedList)Model,page=> Url.Action("Index", new { page }))
